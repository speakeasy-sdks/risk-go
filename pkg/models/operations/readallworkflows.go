// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/risk-go/pkg/models/shared"
	"github.com/speakeasy-sdks/risk-go/pkg/utils"
	"net/http"
)

type ReadAllWorkflowsRequest struct {
	// The unique ID of a parent application where, if provided, the response will only contain workflows from the identified application
	ApplicationID *string `queryParam:"style=form,explode=true,name=application-id"`
	// Whether [Jira workflows](https://help.logicgate.com/hc/en-us) are to be included in the response in addition to regular workflows (defaults to true)
	IncludeJiraWorkflows *bool `default:"true" queryParam:"style=form,explode=true,name=include-jira-workflows"`
	// The zero-indexed page number (must not be less than 0, defaults to 0)
	Page *int `queryParam:"style=form,explode=true,name=page"`
	// The size of the page and maximum number of items to be returned (must not be less than 1, defaults to 20)
	Size *int `queryParam:"style=form,explode=true,name=size"`
}

func (r ReadAllWorkflowsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *ReadAllWorkflowsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ReadAllWorkflowsRequest) GetApplicationID() *string {
	if o == nil {
		return nil
	}
	return o.ApplicationID
}

func (o *ReadAllWorkflowsRequest) GetIncludeJiraWorkflows() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeJiraWorkflows
}

func (o *ReadAllWorkflowsRequest) GetPage() *int {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ReadAllWorkflowsRequest) GetSize() *int {
	if o == nil {
		return nil
	}
	return o.Size
}

type ReadAllWorkflowsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// OK
	PageModelOutWorkflowAPIOut *shared.PageModelOutWorkflowAPIOut
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ReadAllWorkflowsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ReadAllWorkflowsResponse) GetPageModelOutWorkflowAPIOut() *shared.PageModelOutWorkflowAPIOut {
	if o == nil {
		return nil
	}
	return o.PageModelOutWorkflowAPIOut
}

func (o *ReadAllWorkflowsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ReadAllWorkflowsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
