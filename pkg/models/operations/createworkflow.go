// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/risk-go/pkg/models/shared"
	"net/http"
)

type CreateWorkflowRequest struct {
	WorkflowAPICreateIn shared.WorkflowAPICreateIn `request:"mediaType=application/json"`
}

func (o *CreateWorkflowRequest) GetWorkflowAPICreateIn() shared.WorkflowAPICreateIn {
	if o == nil {
		return shared.WorkflowAPICreateIn{}
	}
	return o.WorkflowAPICreateIn
}

type CreateWorkflowResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	WorkflowAPIOut *shared.WorkflowAPIOut
}

func (o *CreateWorkflowResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateWorkflowResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateWorkflowResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CreateWorkflowResponse) GetWorkflowAPIOut() *shared.WorkflowAPIOut {
	if o == nil {
		return nil
	}
	return o.WorkflowAPIOut
}
