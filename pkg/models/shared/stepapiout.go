// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StepAPIOutAssignableUserType - Indicates which users are allowed to be assigned this step on a record
type StepAPIOutAssignableUserType string

const (
	StepAPIOutAssignableUserTypeAppAndExternalUsers StepAPIOutAssignableUserType = "APP_AND_EXTERNAL_USERS"
	StepAPIOutAssignableUserTypeAppUsers            StepAPIOutAssignableUserType = "APP_USERS"
	StepAPIOutAssignableUserTypeExternalUsers       StepAPIOutAssignableUserType = "EXTERNAL_USERS"
)

func (e StepAPIOutAssignableUserType) ToPointer() *StepAPIOutAssignableUserType {
	return &e
}

func (e *StepAPIOutAssignableUserType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APP_AND_EXTERNAL_USERS":
		fallthrough
	case "APP_USERS":
		fallthrough
	case "EXTERNAL_USERS":
		*e = StepAPIOutAssignableUserType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StepAPIOutAssignableUserType: %v", v)
	}
}

// StepAPIOutType - The type of the step
type StepAPIOutType string

const (
	StepAPIOutTypeOrigin StepAPIOutType = "ORIGIN"
	StepAPIOutTypeChain  StepAPIOutType = "CHAIN"
	StepAPIOutTypeEnd    StepAPIOutType = "END"
)

func (e StepAPIOutType) ToPointer() *StepAPIOutType {
	return &e
}

func (e *StepAPIOutType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ORIGIN":
		fallthrough
	case "CHAIN":
		fallthrough
	case "END":
		*e = StepAPIOutType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StepAPIOutType: %v", v)
	}
}

type StepAPIOut struct {
	// Indicates which users are allowed to be assigned this step on a record
	AssignableUserType *StepAPIOutAssignableUserType `json:"assignableUserType,omitempty"`
	// Whether comments are displayed on a step
	EnableComments *bool `json:"enableComments,omitempty"`
	// Whether MFA is required for external users to access this step.
	ExternalUserMfaRequired *bool `json:"externalUserMfaRequired,omitempty"`
	// The unique ID of this Risk Cloud resource
	ID *string `json:"id,omitempty"`
	// The name of the step
	Name *string `json:"name,omitempty"`
	// Identifies the type of object this data represents
	Object *string `json:"object,omitempty"`
	// The type of the step
	Type *StepAPIOutType `json:"type,omitempty"`
	// The parent workflow of the step
	Workflow *WorkflowPropertyAPIOut `json:"workflow,omitempty"`
	// The x-coordinate of the step in the application builder
	Xpos *int `json:"xpos,omitempty"`
	// The y-coordinate of the step in the application builder
	Ypos *int `json:"ypos,omitempty"`
}

func (o *StepAPIOut) GetAssignableUserType() *StepAPIOutAssignableUserType {
	if o == nil {
		return nil
	}
	return o.AssignableUserType
}

func (o *StepAPIOut) GetEnableComments() *bool {
	if o == nil {
		return nil
	}
	return o.EnableComments
}

func (o *StepAPIOut) GetExternalUserMfaRequired() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalUserMfaRequired
}

func (o *StepAPIOut) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *StepAPIOut) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *StepAPIOut) GetObject() *string {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *StepAPIOut) GetType() *StepAPIOutType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *StepAPIOut) GetWorkflow() *WorkflowPropertyAPIOut {
	if o == nil {
		return nil
	}
	return o.Workflow
}

func (o *StepAPIOut) GetXpos() *int {
	if o == nil {
		return nil
	}
	return o.Xpos
}

func (o *StepAPIOut) GetYpos() *int {
	if o == nil {
		return nil
	}
	return o.Ypos
}
