// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ApplicationAPICreateInIcon - The icon type of the application (defaults to CUBES)
type ApplicationAPICreateInIcon string

const (
	ApplicationAPICreateInIconBookmark            ApplicationAPICreateInIcon = "BOOKMARK"
	ApplicationAPICreateInIconBolt                ApplicationAPICreateInIcon = "BOLT"
	ApplicationAPICreateInIconBullhorn            ApplicationAPICreateInIcon = "BULLHORN"
	ApplicationAPICreateInIconCertificate         ApplicationAPICreateInIcon = "CERTIFICATE"
	ApplicationAPICreateInIconCheckSquareO        ApplicationAPICreateInIcon = "CHECK_SQUARE_O"
	ApplicationAPICreateInIconCloud               ApplicationAPICreateInIcon = "CLOUD"
	ApplicationAPICreateInIconComments            ApplicationAPICreateInIcon = "COMMENTS"
	ApplicationAPICreateInIconCubes               ApplicationAPICreateInIcon = "CUBES"
	ApplicationAPICreateInIconDollar              ApplicationAPICreateInIcon = "DOLLAR"
	ApplicationAPICreateInIconExclamationTriangle ApplicationAPICreateInIcon = "EXCLAMATION_TRIANGLE"
	ApplicationAPICreateInIconTextO               ApplicationAPICreateInIcon = "TEXT_O"
	ApplicationAPICreateInIconFolder              ApplicationAPICreateInIcon = "FOLDER"
	ApplicationAPICreateInIconGift                ApplicationAPICreateInIcon = "GIFT"
	ApplicationAPICreateInIconGlobe               ApplicationAPICreateInIcon = "GLOBE"
	ApplicationAPICreateInIconHeartbeat           ApplicationAPICreateInIcon = "HEARTBEAT"
	ApplicationAPICreateInIconLeaf                ApplicationAPICreateInIcon = "LEAF"
	ApplicationAPICreateInIconLegal               ApplicationAPICreateInIcon = "LEGAL"
	ApplicationAPICreateInIconLifeRing            ApplicationAPICreateInIcon = "LIFE_RING"
	ApplicationAPICreateInIconMedkit              ApplicationAPICreateInIcon = "MEDKIT"
	ApplicationAPICreateInIconMoney               ApplicationAPICreateInIcon = "MONEY"
	ApplicationAPICreateInIconPercent             ApplicationAPICreateInIcon = "PERCENT"
	ApplicationAPICreateInIconRocket              ApplicationAPICreateInIcon = "ROCKET"
	ApplicationAPICreateInIconSignal              ApplicationAPICreateInIcon = "SIGNAL"
	ApplicationAPICreateInIconUniversity          ApplicationAPICreateInIcon = "UNIVERSITY"
	ApplicationAPICreateInIconUserCircle          ApplicationAPICreateInIcon = "USER_CIRCLE"
)

func (e ApplicationAPICreateInIcon) ToPointer() *ApplicationAPICreateInIcon {
	return &e
}

func (e *ApplicationAPICreateInIcon) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BOOKMARK":
		fallthrough
	case "BOLT":
		fallthrough
	case "BULLHORN":
		fallthrough
	case "CERTIFICATE":
		fallthrough
	case "CHECK_SQUARE_O":
		fallthrough
	case "CLOUD":
		fallthrough
	case "COMMENTS":
		fallthrough
	case "CUBES":
		fallthrough
	case "DOLLAR":
		fallthrough
	case "EXCLAMATION_TRIANGLE":
		fallthrough
	case "TEXT_O":
		fallthrough
	case "FOLDER":
		fallthrough
	case "GIFT":
		fallthrough
	case "GLOBE":
		fallthrough
	case "HEARTBEAT":
		fallthrough
	case "LEAF":
		fallthrough
	case "LEGAL":
		fallthrough
	case "LIFE_RING":
		fallthrough
	case "MEDKIT":
		fallthrough
	case "MONEY":
		fallthrough
	case "PERCENT":
		fallthrough
	case "ROCKET":
		fallthrough
	case "SIGNAL":
		fallthrough
	case "UNIVERSITY":
		fallthrough
	case "USER_CIRCLE":
		*e = ApplicationAPICreateInIcon(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApplicationAPICreateInIcon: %v", v)
	}
}

// ApplicationAPICreateInType - The type of Risk Cloud application (defaults to NONE)
type ApplicationAPICreateInType string

const (
	ApplicationAPICreateInTypeAccessManagement             ApplicationAPICreateInType = "ACCESS_MANAGEMENT"
	ApplicationAPICreateInTypeAmlKyc                       ApplicationAPICreateInType = "AML_KYC"
	ApplicationAPICreateInTypeAssetManagement              ApplicationAPICreateInType = "ASSET_MANAGEMENT"
	ApplicationAPICreateInTypeAuditManagement              ApplicationAPICreateInType = "AUDIT_MANAGEMENT"
	ApplicationAPICreateInTypeBusinessContinuityPlanning   ApplicationAPICreateInType = "BUSINESS_CONTINUITY_PLANNING"
	ApplicationAPICreateInTypeChangeManagement             ApplicationAPICreateInType = "CHANGE_MANAGEMENT"
	ApplicationAPICreateInTypeComplaintManagement          ApplicationAPICreateInType = "COMPLAINT_MANAGEMENT"
	ApplicationAPICreateInTypeComplianceManagement         ApplicationAPICreateInType = "COMPLIANCE_MANAGEMENT"
	ApplicationAPICreateInTypeContractManagement           ApplicationAPICreateInType = "CONTRACT_MANAGEMENT"
	ApplicationAPICreateInTypeControlsCompliance           ApplicationAPICreateInType = "CONTROLS_COMPLIANCE"
	ApplicationAPICreateInTypeControlsManagement           ApplicationAPICreateInType = "CONTROLS_MANAGEMENT"
	ApplicationAPICreateInTypeCrisisManagement             ApplicationAPICreateInType = "CRISIS_MANAGEMENT"
	ApplicationAPICreateInTypeCustom                       ApplicationAPICreateInType = "CUSTOM"
	ApplicationAPICreateInTypeCustomGrcUseCase             ApplicationAPICreateInType = "CUSTOM_GRC_USE_CASE"
	ApplicationAPICreateInTypeCyberRiskManagement          ApplicationAPICreateInType = "CYBER_RISK_MANAGEMENT"
	ApplicationAPICreateInTypeDataPrivacyManagement        ApplicationAPICreateInType = "DATA_PRIVACY_MANAGEMENT"
	ApplicationAPICreateInTypeEmployeeCompliance           ApplicationAPICreateInType = "EMPLOYEE_COMPLIANCE"
	ApplicationAPICreateInTypeEnterpriseRiskManagement     ApplicationAPICreateInType = "ENTERPRISE_RISK_MANAGEMENT"
	ApplicationAPICreateInTypeEsg                          ApplicationAPICreateInType = "ESG"
	ApplicationAPICreateInTypeIncidentManagement           ApplicationAPICreateInType = "INCIDENT_MANAGEMENT"
	ApplicationAPICreateInTypeInternalAuditManagement      ApplicationAPICreateInType = "INTERNAL_AUDIT_MANAGEMENT"
	ApplicationAPICreateInTypeItRiskManagement             ApplicationAPICreateInType = "IT_RISK_MANAGEMENT"
	ApplicationAPICreateInTypeNone                         ApplicationAPICreateInType = "NONE"
	ApplicationAPICreateInTypeOperationalResiliency        ApplicationAPICreateInType = "OPERATIONAL_RESILIENCY"
	ApplicationAPICreateInTypeOther                        ApplicationAPICreateInType = "OTHER"
	ApplicationAPICreateInTypePolicyAndProcedureManagement ApplicationAPICreateInType = "POLICY_AND_PROCEDURE_MANAGEMENT"
	ApplicationAPICreateInTypePolicyManagement             ApplicationAPICreateInType = "POLICY_MANAGEMENT"
	ApplicationAPICreateInTypePrivacyManagement            ApplicationAPICreateInType = "PRIVACY_MANAGEMENT"
	ApplicationAPICreateInTypeQuantify                     ApplicationAPICreateInType = "QUANTIFY"
	ApplicationAPICreateInTypeRegulatoryCompliance         ApplicationAPICreateInType = "REGULATORY_COMPLIANCE"
	ApplicationAPICreateInTypeRepository                   ApplicationAPICreateInType = "REPOSITORY"
	ApplicationAPICreateInTypeRiskQuantification           ApplicationAPICreateInType = "RISK_QUANTIFICATION"
	ApplicationAPICreateInTypeSoxTesting                   ApplicationAPICreateInType = "SOX_TESTING"
	ApplicationAPICreateInTypeStandardsRegulations         ApplicationAPICreateInType = "STANDARDS_REGULATIONS"
	ApplicationAPICreateInTypeSurvey                       ApplicationAPICreateInType = "SURVEY"
	ApplicationAPICreateInTypeThirdPartyRiskManagement     ApplicationAPICreateInType = "THIRD_PARTY_RISK_MANAGEMENT"
)

func (e ApplicationAPICreateInType) ToPointer() *ApplicationAPICreateInType {
	return &e
}

func (e *ApplicationAPICreateInType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCESS_MANAGEMENT":
		fallthrough
	case "AML_KYC":
		fallthrough
	case "ASSET_MANAGEMENT":
		fallthrough
	case "AUDIT_MANAGEMENT":
		fallthrough
	case "BUSINESS_CONTINUITY_PLANNING":
		fallthrough
	case "CHANGE_MANAGEMENT":
		fallthrough
	case "COMPLAINT_MANAGEMENT":
		fallthrough
	case "COMPLIANCE_MANAGEMENT":
		fallthrough
	case "CONTRACT_MANAGEMENT":
		fallthrough
	case "CONTROLS_COMPLIANCE":
		fallthrough
	case "CONTROLS_MANAGEMENT":
		fallthrough
	case "CRISIS_MANAGEMENT":
		fallthrough
	case "CUSTOM":
		fallthrough
	case "CUSTOM_GRC_USE_CASE":
		fallthrough
	case "CYBER_RISK_MANAGEMENT":
		fallthrough
	case "DATA_PRIVACY_MANAGEMENT":
		fallthrough
	case "EMPLOYEE_COMPLIANCE":
		fallthrough
	case "ENTERPRISE_RISK_MANAGEMENT":
		fallthrough
	case "ESG":
		fallthrough
	case "INCIDENT_MANAGEMENT":
		fallthrough
	case "INTERNAL_AUDIT_MANAGEMENT":
		fallthrough
	case "IT_RISK_MANAGEMENT":
		fallthrough
	case "NONE":
		fallthrough
	case "OPERATIONAL_RESILIENCY":
		fallthrough
	case "OTHER":
		fallthrough
	case "POLICY_AND_PROCEDURE_MANAGEMENT":
		fallthrough
	case "POLICY_MANAGEMENT":
		fallthrough
	case "PRIVACY_MANAGEMENT":
		fallthrough
	case "QUANTIFY":
		fallthrough
	case "REGULATORY_COMPLIANCE":
		fallthrough
	case "REPOSITORY":
		fallthrough
	case "RISK_QUANTIFICATION":
		fallthrough
	case "SOX_TESTING":
		fallthrough
	case "STANDARDS_REGULATIONS":
		fallthrough
	case "SURVEY":
		fallthrough
	case "THIRD_PARTY_RISK_MANAGEMENT":
		*e = ApplicationAPICreateInType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApplicationAPICreateInType: %v", v)
	}
}

type ApplicationAPICreateIn struct {
	// The hex representation of the icon color of the application (defaults to #00a3de)
	Color *string `json:"color,omitempty"`
	// The icon type of the application (defaults to CUBES)
	Icon *ApplicationAPICreateInIcon `json:"icon,omitempty"`
	// The name of the application
	Name string `json:"name"`
	// The type of Risk Cloud application (defaults to NONE)
	Type *ApplicationAPICreateInType `json:"type,omitempty"`
}

func (o *ApplicationAPICreateIn) GetColor() *string {
	if o == nil {
		return nil
	}
	return o.Color
}

func (o *ApplicationAPICreateIn) GetIcon() *ApplicationAPICreateInIcon {
	if o == nil {
		return nil
	}
	return o.Icon
}

func (o *ApplicationAPICreateIn) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ApplicationAPICreateIn) GetType() *ApplicationAPICreateInType {
	if o == nil {
		return nil
	}
	return o.Type
}
