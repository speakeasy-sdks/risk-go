// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type LegacyAPITokenOut struct {
	// An API access token to be used within the bearer authorization header of subsequent Risk Cloud API requests
	AccessToken *string `json:"access_token,omitempty"`
	// The remaining time in seconds until the token expires
	ExpiresIn *int64 `json:"expires_in,omitempty"`
	// The privilege scope of the token, expected to be "read write" for the Risk Cloud API
	Scope *string `json:"scope,omitempty"`
	// The token type, expected to be "bearer" for the Risk Cloud API
	TokenType *string `json:"token_type,omitempty"`
}

func (o *LegacyAPITokenOut) GetAccessToken() *string {
	if o == nil {
		return nil
	}
	return o.AccessToken
}

func (o *LegacyAPITokenOut) GetExpiresIn() *int64 {
	if o == nil {
		return nil
	}
	return o.ExpiresIn
}

func (o *LegacyAPITokenOut) GetScope() *string {
	if o == nil {
		return nil
	}
	return o.Scope
}

func (o *LegacyAPITokenOut) GetTokenType() *string {
	if o == nil {
		return nil
	}
	return o.TokenType
}
