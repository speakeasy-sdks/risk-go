// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// WorkflowMapAPIUpdateInRelationship - The type of the relationship between workflows
type WorkflowMapAPIUpdateInRelationship string

const (
	WorkflowMapAPIUpdateInRelationshipOneToOne   WorkflowMapAPIUpdateInRelationship = "OneToOne"
	WorkflowMapAPIUpdateInRelationshipOneToMany  WorkflowMapAPIUpdateInRelationship = "OneToMany"
	WorkflowMapAPIUpdateInRelationshipManyToOne  WorkflowMapAPIUpdateInRelationship = "ManyToOne"
	WorkflowMapAPIUpdateInRelationshipManyToMany WorkflowMapAPIUpdateInRelationship = "ManyToMany"
)

func (e WorkflowMapAPIUpdateInRelationship) ToPointer() *WorkflowMapAPIUpdateInRelationship {
	return &e
}

func (e *WorkflowMapAPIUpdateInRelationship) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OneToOne":
		fallthrough
	case "OneToMany":
		fallthrough
	case "ManyToOne":
		fallthrough
	case "ManyToMany":
		*e = WorkflowMapAPIUpdateInRelationship(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkflowMapAPIUpdateInRelationship: %v", v)
	}
}

// WorkflowMapAPIUpdateIn - Workflow (Update)
type WorkflowMapAPIUpdateIn struct {
	// The type of the relationship between workflows
	Relationship WorkflowMapAPIUpdateInRelationship `json:"relationship"`
}

func (o *WorkflowMapAPIUpdateIn) GetRelationship() WorkflowMapAPIUpdateInRelationship {
	if o == nil {
		return WorkflowMapAPIUpdateInRelationship("")
	}
	return o.Relationship
}
