// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StepAPIUpdateInAssignableUserType - Indicates which users are allowed to be assigned this step on a record
type StepAPIUpdateInAssignableUserType string

const (
	StepAPIUpdateInAssignableUserTypeAppAndExternalUsers StepAPIUpdateInAssignableUserType = "APP_AND_EXTERNAL_USERS"
	StepAPIUpdateInAssignableUserTypeAppUsers            StepAPIUpdateInAssignableUserType = "APP_USERS"
	StepAPIUpdateInAssignableUserTypeExternalUsers       StepAPIUpdateInAssignableUserType = "EXTERNAL_USERS"
)

func (e StepAPIUpdateInAssignableUserType) ToPointer() *StepAPIUpdateInAssignableUserType {
	return &e
}

func (e *StepAPIUpdateInAssignableUserType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APP_AND_EXTERNAL_USERS":
		fallthrough
	case "APP_USERS":
		fallthrough
	case "EXTERNAL_USERS":
		*e = StepAPIUpdateInAssignableUserType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StepAPIUpdateInAssignableUserType: %v", v)
	}
}

// StepAPIUpdateInType - The type of the step (for END steps, this property cannot be updated since there would be no outgoing default next paths)
type StepAPIUpdateInType string

const (
	StepAPIUpdateInTypeOrigin StepAPIUpdateInType = "ORIGIN"
	StepAPIUpdateInTypeChain  StepAPIUpdateInType = "CHAIN"
	StepAPIUpdateInTypeEnd    StepAPIUpdateInType = "END"
)

func (e StepAPIUpdateInType) ToPointer() *StepAPIUpdateInType {
	return &e
}

func (e *StepAPIUpdateInType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ORIGIN":
		fallthrough
	case "CHAIN":
		fallthrough
	case "END":
		*e = StepAPIUpdateInType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StepAPIUpdateInType: %v", v)
	}
}

// StepAPIUpdateIn - Step (Update)
type StepAPIUpdateIn struct {
	// Indicates which users are allowed to be assigned this step on a record
	AssignableUserType *StepAPIUpdateInAssignableUserType `json:"assignableUserType,omitempty"`
	// Whether comments are displayed on a step
	EnableComments *bool `json:"enableComments,omitempty"`
	// Whether MFA is required for external users to access this step.
	ExternalUserMfaRequired *bool `json:"externalUserMfaRequired,omitempty"`
	// The name of the step
	Name *string `json:"name,omitempty"`
	// The type of the step (for END steps, this property cannot be updated since there would be no outgoing default next paths)
	Type *StepAPIUpdateInType `json:"type,omitempty"`
	// The x-coordinate of the step in the application builder (must not be less than 0)
	Xpos *int `json:"xpos,omitempty"`
	// The y-coordinate of the step in the application builder (must not be less than 0)
	Ypos *int `json:"ypos,omitempty"`
}

func (o *StepAPIUpdateIn) GetAssignableUserType() *StepAPIUpdateInAssignableUserType {
	if o == nil {
		return nil
	}
	return o.AssignableUserType
}

func (o *StepAPIUpdateIn) GetEnableComments() *bool {
	if o == nil {
		return nil
	}
	return o.EnableComments
}

func (o *StepAPIUpdateIn) GetExternalUserMfaRequired() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalUserMfaRequired
}

func (o *StepAPIUpdateIn) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *StepAPIUpdateIn) GetType() *StepAPIUpdateInType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *StepAPIUpdateIn) GetXpos() *int {
	if o == nil {
		return nil
	}
	return o.Xpos
}

func (o *StepAPIUpdateIn) GetYpos() *int {
	if o == nil {
		return nil
	}
	return o.Ypos
}
