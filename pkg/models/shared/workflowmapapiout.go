// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// WorkflowMapAPIOutRelationship - The type of the relationship between workflows
type WorkflowMapAPIOutRelationship string

const (
	WorkflowMapAPIOutRelationshipOneToOne   WorkflowMapAPIOutRelationship = "OneToOne"
	WorkflowMapAPIOutRelationshipOneToMany  WorkflowMapAPIOutRelationship = "OneToMany"
	WorkflowMapAPIOutRelationshipManyToOne  WorkflowMapAPIOutRelationship = "ManyToOne"
	WorkflowMapAPIOutRelationshipManyToMany WorkflowMapAPIOutRelationship = "ManyToMany"
)

func (e WorkflowMapAPIOutRelationship) ToPointer() *WorkflowMapAPIOutRelationship {
	return &e
}

func (e *WorkflowMapAPIOutRelationship) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OneToOne":
		fallthrough
	case "OneToMany":
		fallthrough
	case "ManyToOne":
		fallthrough
	case "ManyToMany":
		*e = WorkflowMapAPIOutRelationship(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkflowMapAPIOutRelationship: %v", v)
	}
}

type WorkflowMapAPIOut struct {
	// The unique ID of the source workflow of the workflow map relationship
	From *string `json:"from,omitempty"`
	// The unique ID of this Risk Cloud resource
	ID *string `json:"id,omitempty"`
	// Identifies the type of object this data represents
	Object *string `json:"object,omitempty"`
	// The type of the relationship between workflows
	Relationship *WorkflowMapAPIOutRelationship `json:"relationship,omitempty"`
	// The unique ID of the destination workflow of the workflow map relationship
	To *string `json:"to,omitempty"`
}

func (o *WorkflowMapAPIOut) GetFrom() *string {
	if o == nil {
		return nil
	}
	return o.From
}

func (o *WorkflowMapAPIOut) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *WorkflowMapAPIOut) GetObject() *string {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *WorkflowMapAPIOut) GetRelationship() *WorkflowMapAPIOutRelationship {
	if o == nil {
		return nil
	}
	return o.Relationship
}

func (o *WorkflowMapAPIOut) GetTo() *string {
	if o == nil {
		return nil
	}
	return o.To
}
