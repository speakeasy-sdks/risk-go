// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ValuePropertyAPIOutType - The type of the value
type ValuePropertyAPIOutType string

const (
	ValuePropertyAPIOutTypeNumber      ValuePropertyAPIOutType = "NUMBER"
	ValuePropertyAPIOutTypeCalculation ValuePropertyAPIOutType = "CALCULATION"
	ValuePropertyAPIOutTypeAttachment  ValuePropertyAPIOutType = "ATTACHMENT"
	ValuePropertyAPIOutTypeDate        ValuePropertyAPIOutType = "DATE"
	ValuePropertyAPIOutTypeOption      ValuePropertyAPIOutType = "OPTION"
	ValuePropertyAPIOutTypeUser        ValuePropertyAPIOutType = "USER"
	ValuePropertyAPIOutTypeText        ValuePropertyAPIOutType = "TEXT"
	ValuePropertyAPIOutTypeOther       ValuePropertyAPIOutType = "OTHER"
)

func (e ValuePropertyAPIOutType) ToPointer() *ValuePropertyAPIOutType {
	return &e
}

func (e *ValuePropertyAPIOutType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NUMBER":
		fallthrough
	case "CALCULATION":
		fallthrough
	case "ATTACHMENT":
		fallthrough
	case "DATE":
		fallthrough
	case "OPTION":
		fallthrough
	case "USER":
		fallthrough
	case "TEXT":
		fallthrough
	case "OTHER":
		*e = ValuePropertyAPIOutType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValuePropertyAPIOutType: %v", v)
	}
}

// ValuePropertyAPIOut - The values of the record field
type ValuePropertyAPIOut struct {
	// The unique ID of this Risk Cloud resource
	ID *string `json:"id,omitempty"`
	// The numeric representation of the record value, with the format varying by value type:
	// - `NUMBER`: the numeric value of the number (example: `42.0`)
	// - `CALCULATION`: the numeric value of the calculation (example: `42.0`)
	// - `ATTACHMENT`: the version count of the attachment (example: `2.0`)
	// - `DATE`: the date measured in milliseconds since the Unix epoch (example: `1672552800000.0`)
	// - `OPTION`: the numeric value of the option (example: `2.0`)
	// - `USER`: a null value (example: `null`)
	// - `TEXT`: a null value (example: `null`)
	NumericValue *float64 `json:"numericValue,omitempty"`
	// Identifies the type of object this data represents
	Object *string `json:"object,omitempty"`
	// The text representation of the record value, with the format varying by value type:
	// - `NUMBER`: a string representation of the number, with currency if specified on the field (example: `"42"`)
	// - `CALCULATION`: a string representation of the label if specified on the field, otherwise the number (example: `"Highest Risk"`)
	// - `ATTACHMENT`: the name of the attachment file (example: `"my-evidence.pdf"`)
	// - `DATE`: the date formatted according to the requesting user's settings (example: `"1/1/23, 12:00 PM"`)
	// - `OPTION`: the text value of the option (example: `"Medium Risk"`)
	// - `USER`: the full name and email of the user (example: `"First Last (first.last@example.com)"`)
	// - `TEXT`: the text value (example: `"Data Theft"`)
	TextValue *string `json:"textValue,omitempty"`
	// The type of the value
	Type *ValuePropertyAPIOutType `json:"type,omitempty"`
}

func (o *ValuePropertyAPIOut) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ValuePropertyAPIOut) GetNumericValue() *float64 {
	if o == nil {
		return nil
	}
	return o.NumericValue
}

func (o *ValuePropertyAPIOut) GetObject() *string {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *ValuePropertyAPIOut) GetTextValue() *string {
	if o == nil {
		return nil
	}
	return o.TextValue
}

func (o *ValuePropertyAPIOut) GetType() *ValuePropertyAPIOutType {
	if o == nil {
		return nil
	}
	return o.Type
}
